diff --git a/src/physfs.c b/src/physfs.c
index fdb1405..7eaa5ba 100644
--- a/src/physfs.c
+++ b/src/physfs.c
@@ -11,6 +11,10 @@
 #define __PHYSICSFS_INTERNAL__
 #include "physfs_internal.h"
 
+#ifdef __PSP__
+#include <pthread.h>
+#endif
+
 #if defined(_MSC_VER)
 #include <stdarg.h>
 
@@ -1194,6 +1198,9 @@ static int doDeinit(void);
 
 int PHYSFS_init(const char *argv0)
 {
+    #ifdef __PSP__
+    pthread_init();
+    #endif
     BAIL_IF(initialized, PHYSFS_ERR_IS_INITIALIZED, 0);
 
     if (!externalAllocator)
diff --git a/src/physfs_platform_posix.c b/src/physfs_platform_posix.c
index fa2159c..f95fdab 100644
--- a/src/physfs_platform_posix.c
+++ b/src/physfs_platform_posix.c
@@ -274,9 +274,9 @@ PHYSFS_sint64 __PHYSFS_platformFileLength(void *opaque)
 
 int __PHYSFS_platformFlush(void *opaque)
 {
-    const int fd = *((int *) opaque);
-    if ((fcntl(fd, F_GETFL) & O_ACCMODE) != O_RDONLY)
-        BAIL_IF(fsync(fd) == -1, errcodeFromErrno(), 0);
+    //const int fd = *((int *) opaque);
+    //if ((fcntl(fd, F_GETFL) & O_ACCMODE) != O_RDONLY)
+    //    BAIL_IF(fsync(fd) == -1, errcodeFromErrno(), 0);
     return 1;
 } /* __PHYSFS_platformFlush */
 
@@ -299,7 +299,11 @@ int __PHYSFS_platformDelete(const char *path)
 int __PHYSFS_platformStat(const char *fname, PHYSFS_Stat *st, const int follow)
 {
     struct stat statbuf;
+#ifdef PHYSFS_PLATFORM_PSP
+    const int rc = stat(fname, &statbuf);
+#else
     const int rc = follow ? stat(fname, &statbuf) : lstat(fname, &statbuf);
+#endif
     BAIL_IF(rc == -1, errcodeFromErrno(), 0);
 
     if (S_ISREG(statbuf.st_mode))
diff --git a/src/physfs_platforms.h b/src/physfs_platforms.h
index d4e4bfd..fbcb70a 100644
--- a/src/physfs_platforms.h
+++ b/src/physfs_platforms.h
@@ -72,6 +72,11 @@
 #elif defined(unix) || defined(__unix__)
 #  define PHYSFS_PLATFORM_UNIX 1
 #  define PHYSFS_PLATFORM_POSIX 1
+#elif defined(PSP)
+#  define PHYSFS_NO_CDROM_SUPPORT 1
+#  define PHYSFS_PLATFORM_UNIX 1
+#  define PHYSFS_PLATFORM_POSIX 1
+#  define PHYSFS_PLATFORM_PSP 1
 #else
 #  error Unknown platform.
 #endif
